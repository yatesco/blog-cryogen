<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='http://colinyates.co.uk' rel='self' type='application/rss+xml'/>
<title>
Random musings
</title>
<link>
http://colinyates.co.uk
</link>
<description>
Random musics of a confused mind
</description>
<lastBuildDate>
Sun, 25 Sep 2016 21:10:28 +0100
</lastBuildDate>
<generator>
clj-rss
</generator>
<item>
<guid>
http://colinyates.co.uk/posts-output/2016-09-25-hello-again/
</guid>
<link>
http://colinyates.co.uk/posts-output/2016-09-25-hello-again/
</link>
<title>
Blogging, the sequel!
</title>
<description>
&lt;h2&gt;&lt;a name=&quot;a&amp;#95;fresh&amp;#95;start&quot;&gt;&lt;/a&gt;A fresh start&lt;/h2&gt;&lt;p&gt;So, er yeah. I haven't really blogged for a &lt;i&gt;long&lt;/i&gt; time - this time it will be different. I promise.&lt;/p&gt;&lt;p&gt;Hmm, I am already sceptical. It is well known that 'trying harder' never works, so what is different this time? Well, I have some objectives which are &lt;a href='https://en.wikipedia.org/wiki/SMART_criteria'&gt;SMART&lt;/a&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;S&lt;/strong&gt;pecific&lt;/li&gt;&lt;li&gt;&lt;strong&gt;M&lt;/strong&gt;easurable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;greed upon&lt;/li&gt;&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;ealistic&lt;/li&gt;&lt;li&gt;&lt;strong&gt;T&lt;/strong&gt;ime-based&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In a democracy of 1 it is pretty easy to meet the 'Agreed upon' criteria. So, what is my goal? To publish one 'meaty' blog post a week. By 'meaty' I mean a reaction to some non-trivial event in real life, probably work related.&lt;/p&gt;&lt;p&gt;What sorts of things will I ramble on about? Primarily technical I think, specifically around the Functional Programming and Enterprise landscape.&lt;/p&gt;&lt;p&gt;I care very passionately about Software Engineering and critical thinking as oppose to doing it &lt;code&gt;because Google&lt;/code&gt;. That will almost certainly creep in throughout the blog.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;jekyll,&amp;#95;so&amp;#95;long&quot;&gt;&lt;/a&gt;Jekyll, so long&lt;/h2&gt;&lt;p&gt;My previous blog was built using the excellent &lt;a href='https://jekyllrb.com'&gt;jekyll&lt;/a&gt;. The handful of posts can be found &lt;a href='https://github.com/yatesco/yatesco.github.io'&gt;on github&lt;/a&gt;. I fully intended to use it, but having upgraded to MacOS Sierra, installing jekyll was an exercise in pain.&lt;/p&gt;&lt;p&gt;&lt;code&gt;jekyll&lt;/code&gt; itself had moved to using &lt;code&gt;bundler&lt;/code&gt; which I don't object to at all. The thing I &lt;i&gt;do&lt;/i&gt; object to though is a gazillion &lt;code&gt;gem install&lt;/code&gt;s, failing on the somewhat infamous &lt;a href='http://www.nokogiri.org/tutorials/installing_nokogiri.html'&gt;Nokogiri&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Their &lt;a href='https://github.com/sparklemotion/nokogiri'&gt;GitHub&lt;/a&gt; issues list contains a number of helpful pointers when using &lt;code&gt;brew&lt;/code&gt;, but unfortunately I am using &lt;a href='https://www.macports.org'&gt;macports&lt;/a&gt; and after 3 hours or so of trying different incantations I gave up.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;cryogen&quot;&gt;&lt;/a&gt;Cryogen&lt;/h2&gt;&lt;p&gt;I had noticed &lt;a href='http://cryogenweb.org'&gt;Cryogen&lt;/a&gt; before but &lt;code&gt;jekyll&lt;/code&gt; was sufficient at the time, now I thought it deserved another look. And I am glad I did. Features?:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;tags&lt;/li&gt;&lt;li&gt;feeds&lt;/li&gt;&lt;li&gt;markdown (or that funny AsciiDoc ;-)&lt;/li&gt;&lt;li&gt;ridiculously trivial &lt;code&gt;disqus&lt;/code&gt; &lt;a href='http://cryogenweb.org/docs/configuration.html'&gt;integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Clojure (which I use full time at work)&lt;/li&gt;&lt;li&gt;lein&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Some not-so-great bits:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;the site is generated (following convention) in &lt;code&gt;resources\public&lt;/code&gt; so actually deploying the site requires an extra step or two. The solution can be as simple as having one git repo for the source and one for &lt;code&gt;resources\public&lt;/code&gt; which &lt;code&gt;GitHub Pages&lt;/code&gt; then serves.&lt;/li&gt;&lt;li&gt;the web site is generated automatically but you still need to refresh the web browser. I might investigate the most excellent &lt;a href='https://github.com/bhauman/lein-figwheel'&gt;figwheel&lt;/a&gt; to see if that can be integrated&lt;/li&gt;&lt;li&gt;it doesn't support &lt;code&gt;org-mode&lt;/code&gt;. I can hardly hold it to account for that, and given &lt;code&gt;org-mode&lt;/code&gt;'s excellent export modes it should be trivial to sort it out.&lt;/li&gt;&lt;li&gt;the default theme means &lt;code&gt;literal&lt;/code&gt; and &lt;a href='https://www.google.co.uk/search?q=happy+cat&amp;client=safari&amp;rls=en&amp;tbm=isch&amp;tbo=u&amp;source=univ&amp;sa=X&amp;ved=0ahUKEwj&amp;ndash;dfIpKvPAhXqDcAKHY01BaAQsAQIHQ&amp;biw=1324&amp;bih=902'&gt;links&lt;/a&gt; aren't easily distinguished.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;An alternative to GitHub Pages is to host your own static server and &lt;code&gt;rsync&lt;/code&gt; it across, which is what I am doing.&lt;/p&gt;&lt;p&gt;Actually, because my &lt;code&gt;yak shaver&lt;/code&gt; was feeling particularly sharp I decided to use &lt;a href='https://circleci.com'&gt;circleci&lt;/a&gt; to deploy it which was as &lt;a href='https://github.com/yatesco/blog-cryogen/blob/master/circle.yml'&gt;trivial&lt;/a&gt; as:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;deployment:
  push&amp;#95;to&amp;#95;server:
    branch: master
    commands:
      - rsync -avz resources/public/ coliny@colinyates.co.uk:html/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;i&gt;make sure to create a new key pair for your remote server, &lt;code&gt;ssh-copy-id&lt;/code&gt; to your remote server and then add the private key to your &lt;code&gt;circleci&lt;/code&gt; project&lt;/i&gt;&lt;/p&gt;&lt;p&gt;As the ever-growing engineer I notice a few upgrades to my process:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;rather than commit the entire &lt;code&gt;resources\public&lt;/code&gt; I could just commit the &lt;code&gt;resources\templates&lt;/code&gt; directory and have &lt;code&gt;circleci&lt;/code&gt; run &lt;code&gt;lein run&lt;/code&gt; before deployment&lt;/li&gt;&lt;li&gt;having the &lt;code&gt;rsync&lt;/code&gt; call in &lt;code&gt;circle.yml&lt;/code&gt; feels a bit yucky. Better to have a commited script which &lt;code&gt;circleci&lt;/code&gt; calls.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Anyways, it was relatively harmless and the blog is off to a flying start.&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;the&amp;#95;future!&quot;&gt;&lt;/a&gt;The Future!&lt;/h3&gt;&lt;p&gt;Watch this space ;-).&lt;/p&gt;
</description>
<enclosure>

</enclosure>
<pubDate>
Sun, 25 Sep 2016 00:00:00 +0100
</pubDate>
</item>
</channel>
</rss>
